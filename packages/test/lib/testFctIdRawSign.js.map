{"version":3,"sources":["../src/testFctIdRawSign.js"],"names":["require","Entry","validateEntryInstance","composeEntry","composeEntryLedger","nacl","sign","transport","fct","Fct","path","ecBuffer","Buffer","from","signMessageRaw","result","detached","verify","console","log"],"mappings":";;;;;;;;;;;;;;AAAA;;;;;;eAC2EA,QAAS,kBAAT,C;IAAnEC,K,YAAAA,K;IAAOC,qB,YAAAA,qB;IAAuBC,Y,YAAAA,Y;IAAcC,kB,YAAAA,kB;;AACpD,IAAMC,OAAOL,QAAQ,qBAAR,EAA+BM,IAA5C;;;sFAEe,iBAAMC,SAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AACPC,eADO,GACD,IAAIC,kBAAJ,CAAQF,SAAR,CADC;AAEPG,gBAFO,GAEA,iBAFA;AAIPC,oBAJO,GAIIC,OAAOC,IAAP,CAAY,6CAAZ,CAJJ;;AAMb;;AANa;AAAA,mBAOML,IAAIM,cAAJ,CAAmBJ,IAAnB,EAAyBC,QAAzB,CAPN;;AAAA;AAOTI,kBAPS;;AAAA,iBASVV,KAAKW,QAAL,CAAcC,MAAd,CAAqBN,QAArB,EAA+BC,OAAOC,IAAP,CAAYE,OAAO,GAAP,CAAZ,EAAwB,KAAxB,CAA/B,EAA+DH,OAAOC,IAAP,CAAYE,OAAO,GAAP,CAAZ,EAAwB,KAAxB,CAA/D,CATU;AAAA;AAAA;AAAA;;AAURG,oBAAQC,GAAR,CAAY,mCAAZ;AAVQ;AAAA;;AAAA;AAYRD,oBAAQC,GAAR,CAAY,uCAAZ;AAZQ,kBAaF,4BAbE;;AAAA;AAAA,6CAgBNJ,MAhBM;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G","file":"testFctIdRawSign.js","sourcesContent":["import Fct from '@factoid.org/hw-app-fct'\nconst { Entry, validateEntryInstance, composeEntry, composeEntryLedger } = require( 'factom/src/entry' )\nconst nacl = require('tweetnacl/nacl-fast').sign\n\nexport default async transport => {\n  const fct = new Fct(transport);\n  const path = \"44'/281'/0'/0/0\"\n\n  const ecBuffer = Buffer.from('The quick brown fox jumps over the lazy dog');\n  \n  //sign the raw message using identity key\n  let result = await fct.signMessageRaw(path, ecBuffer)\n\n  if(nacl.detached.verify(ecBuffer, Buffer.from(result['s'],'hex'), Buffer.from(result['k'],'hex'))) {\n       console.log(\"Transaction Signature is valid!!!\")\n    } else {\n       console.log(\"Transaction Signature is NOT valid!!!\")\n       throw(\"Invalid Identity Signature\")\n    }\n\n  return result\n}\n"]}