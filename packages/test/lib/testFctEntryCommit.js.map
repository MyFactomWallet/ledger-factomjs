{"version":3,"sources":["../src/testFctEntryCommit.js"],"names":["require","FactomCli","Entry","validateEntryInstance","composeEntry","composeEntryLedger","cli","host","port","path","debugPath","user","password","protocol","rejectUnauthorized","retry","retries","factor","minTimeout","maxTimeout","transport","fct","Fct","ecRate","getAddress","addr","ecaddr","entry","builder","chainId","content","timestamp","Date","now","build","ecbuffer","console","log","toString","signCommit","result","out"],"mappings":";;;;;;;;;;;;;;AAAA;;;;;;eAEsBA,QAAQ,uBAAR,C;IAAdC,S,YAAAA,S;;gBACmED,QAAS,kBAAT,C;IAAnEE,K,aAAAA,K;IAAOC,qB,aAAAA,qB;IAAuBC,Y,aAAAA,Y;IAAcC,kB,aAAAA,kB;;AAEpD,IAAMC,MAAM,IAAIL,SAAJ,CAAc;AACxBM,QAAM,0BADkB;AAExBC,QAAM,GAFkB;AAGxBC,QAAM,KAHkB,EAGX;AACbC,aAAW,QAJa,EAIH;AACrBC,QAAM,MALkB,EAKV;AACdC,YAAU,KANc;AAOxBC,YAAU,OAPc,EAOL;AACnBC,sBAAoB,IARI,EAQE;AAC1BC,SAAO;AACLC,aAAS,CADJ;AAELC,YAAQ,CAFH;AAGLC,gBAAY,GAHP;AAILC,gBAAY;AAJP;AATiB,CAAd,CAAZ;;;sFAiBe,iBAAMC,SAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AACPC,eADO,GACD,IAAIC,kBAAJ,CAAQF,SAAR,CADC;AAEPG,kBAFO,GAEE,KAFF,EAEQ;;AACfd,gBAHO,GAGA,mBAHA;AAAA;AAAA,mBAIMY,IAAIG,UAAJ,CAAef,IAAf,CAJN;;AAAA;AAIPgB,gBAJO;AAKPC,kBALO,GAKED,KAAK,SAAL,CALF;AAOPE,iBAPO,GAOCzB,MAAM0B,OAAN,GACXC,OADW,CACH,kEADG,EAEXC,OAFW,CAEH,cAFG,EAGXC,SAHW,CAGDC,KAAKC,GAAL,EAHC,EAIXC,KAJW,EAPD;AAaPC,oBAbO,GAaI9B,mBAAmBsB,KAAnB,CAbJ;;;AAebS,oBAAQC,GAAR,CAAY,iDAAZ;AACAD,oBAAQC,GAAR,CAAYF,SAASG,QAAT,CAAkB,KAAlB,CAAZ;AACAF,oBAAQC,GAAR,CAAY,+CAAZ;;AAjBa;AAAA,mBAmBQhB,IAAIkB,UAAJ,CAAe9B,IAAf,EAAqB0B,SAASG,QAAT,CAAkB,KAAlB,CAArB,EAA8C,KAA9C,CAnBR;;AAAA;AAmBPE,kBAnBO;;;AAqBbJ,oBAAQC,GAAR,CAAY,8CAAZ;AACAD,oBAAQC,GAAR,CAAYG,MAAZ;AACAJ,oBAAQC,GAAR,CAAY,8CAAZ;;AAEMI,eAzBO,GAyBDrC,aAAauB,KAAb,EAAoBD,MAApB,EAA4Bc,OAAO,GAAP,CAA5B,CAzBC;;;AA2BbJ,oBAAQC,GAAR,CAAY,4CAAZ;AACAD,oBAAQC,GAAR,CAAY,SAAZ;AACAD,oBAAQC,GAAR,CAAYI,IAAI,QAAJ,EAAcH,QAAd,CAAuB,KAAvB,CAAZ;AACAF,oBAAQC,GAAR,CAAY,SAAZ;AACAD,oBAAQC,GAAR,CAAYI,IAAI,QAAJ,EAAcH,QAAd,CAAuB,KAAvB,CAAZ;AACAF,oBAAQC,GAAR,CAAY,yCAAZ;;AAhCa,6CAmCNI,GAnCM;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G","file":"testFctEntryCommit.js","sourcesContent":["import Fct from '@factoid.org/hw-app-fct'\n\nconst { FactomCli } = require('factom/src/factom-cli')\nconst { Entry, validateEntryInstance, composeEntry, composeEntryLedger } = require( 'factom/src/entry' )\n\nconst cli = new FactomCli({\n  host: 'courtesy-node.factom.com',\n  port: 443,\n  path: '/v2', // Path to V2 API. Default to /v2\n  debugPath: '/debug', // Path to debug API. Default to /debug\n  user: 'paul', // RPC basic authentication\n  password: 'pwd',\n  protocol: 'https', // http or https. Default to http\n  rejectUnauthorized: true, // Set to false to allow connection to a node with a self-signed certificate\n  retry: {\n    retries: 4,\n    factor: 2,\n    minTimeout: 500,\n    maxTimeout: 2000\n  }\n})\n\nexport default async transport => {\n  const fct = new Fct(transport);\n  const ecRate = 24000 //await CORS... cli.getEntryCreditRate()\n  const path = \"44'/132'/0'/0'/0'\"\n  const addr = await fct.getAddress(path)\n  const ecaddr = addr['address']\n\n  const entry = Entry.builder()\n    .chainId('954d5a49fd70d9b8bcdb35d252267829957f7ef7fa6c74f88419bdc5e82209f4')\n    .content('Hello Ledger')\n    .timestamp(Date.now())\n    .build();\n\n  const ecbuffer = composeEntryLedger(entry)\n\n  console.log('========== Entry Commit Ledger Begin ==========')\n  console.log(ecbuffer.toString('hex'))\n  console.log('========== Entry Commit Ledger End ==========')\n\n  const result = await fct.signCommit(path, ecbuffer.toString('hex'),false)\n\n  console.log('========== Entry Commit Signature ==========')\n  console.log(result)\n  console.log('========== Entry Commit Signature ==========')\n\n  const out = composeEntry(entry, ecaddr, result['s'])\n\n  console.log('========== Composed Entry Begin ==========')\n  console.log('commit:')\n  console.log(out['commit'].toString('hex'))\n  console.log('reveal:')\n  console.log(out['reveal'].toString('hex'))\n  console.log('========== Compose Entry End ==========')\n\n\n  return out\n}\n"]}